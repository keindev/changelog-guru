name: Build

on: [push, pull_request]

jobs:
  triage-labels:
    name: Add labels
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/labeler@main
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x, 15.x]
        os: [ubuntu-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js v${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install Dependencies
      run: npm ci

    - name: Lint and test
      run: |
        npm run check
        npm run test

    - name: Cache coverage
      if: ${{ success() && matrix.node-version == '15.x' }}
      uses: actions/cache@v2
      with:
        path: coverage
        key: coverage-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('src/**/*.*', 'jest.config.js', '**/package-lock.json') }}

  build:
    name: Build
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install Dependencies
      run: npm ci

    - name: Build
      run: npm run build

  coverage:
    name: Coverage
    if: ${{ github.event_name == 'push' }}
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache coverage
      id: cache-coverage
      uses: actions/cache@v2
      with:
        path: coverage
        key: coverage-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('src/**/*.*', 'jest.config.js', '**/package-lock.json') }}

    - name: Setup Node.js v${{ matrix.node-version }}
      if: steps.cache-coverage.outputs.cache-hit != 'true'
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      if: steps.cache-coverage.outputs.cache-hit != 'true'
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Test
      if: steps.cache-coverage.outputs.cache-hit != 'true'
      run: |
        npm ci
        npm run test

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info






